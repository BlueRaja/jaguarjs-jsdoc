<?js
var self = this;

/***
   Copyright 2013 Teun Duynstee
   
   https://github.com/Teun/thenBy.js

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 */
firstBy = (function() {
    /* mixin for the `thenBy` property */
    function extend(f) {
        f.thenBy = tb;
        return f;
    }
    /* adds a secondary compare function to the target function (`this` context)
       which is applied in case the first one returns 0 (equal)
       returns a new compare function, which has a `thenBy` method as well */
    function tb(y) {
        var x = this;
        return extend(function(a, b) {
            return x(a,b) || y(a,b);
        });
    }
    return extend;
})();

/**
 * http://stackoverflow.com/questions/1129216/sort-array-of-objects-by-property-value-in-javascript
 * 
 * @description 
 * Returns a function which will sort an
 * array of objects by the given key.
 * 
 * @param  {String}  key
 * @param  {Boolean} reverse
 * @return {Function}     
 */
function sortBy(key, reverse) {
	
  // Move smaller items towards the front
  // or back of the array depending on if
  // we want to sort the array in reverse
  // order or not.
  var moveSmaller = reverse ? 1 : -1;

  // Move larger items towards the front
  // or back of the array depending on if
  // we want to sort the array in reverse
  // order or not.
  var moveLarger = reverse ? -1 : 1;

  /**
   * @param  {*} a
   * @param  {*} b
   * @return {Number}
   */
  return function(a, b) {
    if (!a[key] || !b[key]){
    	return 0;
    }
    if (a[key] < b[key]) {
      return moveSmaller;
    }
    if (a[key] > b[key]) {
      return moveLarger;
    }
    return 0;
  };
}
// --------------------------------------------------------------------
// Modify the navigation array so we can sort the Esri JavaScript
// library by module path and class name
// --------------------------------------------------------------------
var modifiedNav = [];
this.nav.forEach(function items(item) {
	// ---------------------------
	// This section is what figures out the folder path and esri class/module
	// from parsed jsdoc
	// ---------------------------

	item["folderpath"] = self.parseEsriAPIString("path", item.longname);
	item["classormodulename"] = self.parseEsriAPIString("name", item.longname);
	modifiedNav.push(item);
});

modifiedNav.sort(firstBy(sortBy("folderpath")).thenBy(sortBy("classormodulename")));
this.modifiedNav = modifiedNav;
?>
<div class="navigation">
    <?js if (env.conf.templates.applicationName && env.conf.templates.applicationName.length > 0) { ?>
        <h3 class="applicationName"><a href="index.html"><?js= env.conf.templates.applicationName ?></a></h3>
    <?js } ?>
		<aside class="js-accordion accordion side-nav">
            <h2 class="side-nav-title padding-leader-half padding-trailer-half text-large phone-hide">ArcGIS API for JavaScript Beta</h2>
			<div class="accordion-section phone-show">
                <h2 class="accordion-title padding-leader-half padding-trailer-half text-large phone-show">ArcGIS API for JavaScript Beta</h2>
				<nav class="accordion-content">
					<a class="side-nav-link" href="../">Home</a>
				</nav>
				<nav class="accordion-content">
					<a class="side-nav-link" href="../guide">Guide</a>
				</nav>
				<nav class="accordion-content">
					<a class="side-nav-link" href="../api-reference">API Reference</a>
				</nav>
				<nav class="accordion-content">
					<a class="side-nav-link" href="../sample-code">Sample Code</a>
				</nav>
				<nav class="accordion-content">
                    <a class="side-nav-link" href="../forum">Forum</a>
				</nav>
			</div>
		</aside>
		<div class="search">
				<input id="search" type="text" class="form-control input-sm api-ref-search" placeholder="Search API Reference">
		</div>

		<?js
		// --------------------------------------------------------------------
		// API Reference search list
		// --------------------------------------------------------------------
		?>
		<?js= this.partial('navigation-search-list.tmpl', this) ?>

    <aside class="js-accordion accordion api-ref-accordion side-nav">
    <?js

		var folderNodeDict = {};
		var lastFolder = "";
    modifiedNav.forEach(function (item) {
			var folder = item.folderpath;
			if(lastFolder === ""){
				lastFolder = folder;
			}
    ?>
			<?js if(folder !== lastFolder){ ?>
			</div>
			<?js }?>
		<?js
			if(!folderNodeDict.hasOwnProperty(folder)){ 
				folderNodeDict[folder] = "added";
		?>
			<div class="accordion-section item" data-folderpath="<?js= folder ?>">
				<h4 class="accordion-title"><?js= folder ?></h4>
		<?js }?>
	        <nav class="accordion-content" data-name="<?js= item.longname ?>">
                <?js= self.linkto(item.longname, item.classormodulename, "side-nav-link") ?>
				
	            <ul class="members itemMembers">
	            <?js
	            if (item.members.length) {
	            ?>
	            <span class="subtitle">Properties</span>
	            <?js
	                item.members.forEach(function (v) {
	            ?>
	                <li data-name="<?js= v.longname ?>"><?js= self.linkto(v.longname, v.name) ?></li>
	            <?js
	                });
	            }
	            ?>
	            </ul>
	            <ul class="typedefs itemMembers">
	            <?js
	            if (item.typedefs.length) {
	            ?>
	            <span class="subtitle">Typedefs</span>
	            <?js
	                item.typedefs.forEach(function (v) {
	            ?>
	                <li data-name="<?js= v.longname ?>"><?js= self.linkto(v.longname, v.name) ?></li>
	            <?js
	                });
	            }
	            ?>
	            </ul>
	            <ul class="methods itemMembers">
	            <?js
	            if (item.methods.length) {
	            ?>
	            <span class="subtitle">Methods</span>
	            <?js

	                item.methods.forEach(function (v) {
	            ?>
	                <li data-name="<?js= v.longname ?>"><?js= self.linkto(v.longname, v.name + "()") ?></li>
	            <?js
	                });
	            }
	            ?>
	            </ul>
	            <ul class="events itemMembers">
	            <?js
	            if (item.events.length) {
	            ?>
	            <span class="subtitle">Events</span>
	            <?js
	                item.events.forEach(function (v) {
	            ?>
	                <li data-name="<?js= v.longname ?>"><?js= self.linkto(v.longname, v.name ) ?></li>
	            <?js
	                });
	            }
	            ?>
	            </ul>
			</nav>
		<?js lastFolder = folder?>
		
    <?js }); 
	?>
    </aside>
	
</div>
